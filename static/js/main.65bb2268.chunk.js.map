{"version":3,"sources":["components/ResourceCard.jsx","components/ResourcesGrid.jsx","components/ResourcesList.jsx","components/ResourcesMap.jsx","components/FilterBlock.jsx","assets/arrow.svg","components/FilterSecondarySidebar.jsx","components/FilterSidebar.jsx","components/CurrentFiltersRecap.jsx","views/HomeView.jsx","views/ResourceView.jsx","utils/embed.js","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["ResourceCard","to","this","props","item","id","Card","style","marginBottom","minHeight","fields","Attachments","length","Img","variant","src","url","Body","Title","Text","Type_name","map","type","Badge","Component","ResourcesGrid","archiveItems","Container","Row","xs","md","lg","Col","ResourcesList","data","React","useMemo","i","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","ResourcesMap","UseQueryParamExample","useQueryParam","filterName","ArrayParam","params","setFilterValue","paramsArray","className","filterItems","filter","val","labelBy","isSelected","includes","checked","value","onChange","splice","indexOf","push","FilterSecondarySidebar","open","width","children","title","onClose","clickRef","ref","callback","handleClick","e","current","contains","target","parentNode","document","addEventListener","removeEventListener","useClickOutside","left","backgroundImage","arrow","onClick","filtersList","key","label","state","showSideMenu","currentFilterPanel","show","setState","setShowSideMenu","FilterBlock","blockTitle","filters","pandemics","themes","types","tags","languages","countries","cities","t","setFilterPanel","find","currentFilterContent","CurrentFiltersRecap","filterKey","onRemove","HomeView","loading","currentViewType","fetchData","prevProps","JSON","stringify","self","base","Airtable","apiKey","process","formulas","Object","keys","forEach","paramKey","filterVal","Array","isArray","v","join","formula","select","view","filterByFormula","firstPage","err","records","console","error","setCurrentViewType","renderParamsRecap","Spinner","animation","renderCurrentViewType","ResourceView","resource","resourceId","record","source","code","URL","hostname","youtubeId","href","replace","split","height","frameborder","allow","allowfullscreen","vimeoId","ID","match","embedUtils","archiveUrl","spotifyUrl","origin","pathname","allowtransparency","scrolling","encodeURIComponent","resourceContent","format","alt","generateEmbedCode","resourceMedia","resourceInfo","App","ReactRouterRoute","Route","logo","exact","path","urlParams","qs","parse","location","search","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"ycAIqBA,E,4JACnB,WACE,OAAO,cAAC,IAAD,CAASC,GAAI,aAAeC,KAAKC,MAAMC,KAAKC,GAA5C,SACC,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,OAAQC,UAAW,SAAhD,UACIP,KAAKC,MAAMC,KAAKM,OAAOC,aAAeT,KAAKC,MAAMC,KAAKM,OAAOC,YAAYC,OAAS,GAC/E,cAACN,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMC,IAAKb,KAAKC,MAAMC,KAAKM,OAAOC,YAAY,GAAGK,MACxE,eAACV,EAAA,EAAKW,KAAN,WACE,cAACX,EAAA,EAAKY,MAAN,UAAahB,KAAKC,MAAMC,KAAKM,OAAO,cACpC,cAACJ,EAAA,EAAKa,KAAN,IAECjB,KAAKC,MAAMC,KAAKM,OAAOU,WAAalB,KAAKC,MAAMC,KAAKM,OAAOU,UAAUC,KAAI,SAAAC,GAAI,OAC1E,cAACC,EAAA,EAAD,CAAOT,QAAQ,OAAf,SAAuBQ,mB,GAXDE,aCc3BC,EAfO,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEtB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACGL,EAAaL,KAAI,SAACjB,GAAD,OAChB,cAAC4B,EAAA,EAAD,UACE,cAAC,EAAD,CAAc5B,KAAMA,KADZA,EAAKC,Y,gBC0FV4B,EAhGO,SAAC,GAAoB,IAAnBP,EAAkB,EAAlBA,aAChBQ,EAAOC,IAAMC,SACjB,kBAAMV,EAAaL,KAAI,SAAAgB,GAAC,OAAIA,EAAE3B,YAC9B,IAGI4B,EAAUH,IAAMC,SACpB,iBAAM,CACJ,CACEG,OAAQ,YACRC,SAAU,YAEZ,CACED,OAAQ,QACRC,SAAU,YAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,SACRC,SAAU,UAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,YACRC,SAAU,YAEZ,CACED,OAAQ,cACRC,SAAU,kBAGd,IAGIC,EAAgBC,mBAAS,CAAEJ,UAASJ,SAGxCS,EAKEF,EALFE,cACAC,EAIEH,EAJFG,kBACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,KACAC,EACEN,EADFM,WAGF,OAEE,cADA,CACA,mCAAWJ,KAAX,cACE,gCAEEE,EAAaxB,KAAI,SAAA2B,GAAW,OAE1B,aADA,CACA,gCAAQA,EAAYC,uBAApB,aAEED,EAAYE,QAAQ7B,KAAI,SAAA8B,GAAM,OAE5B,aADA,CACA,gCAAQA,EAAOC,kBAAf,aAEED,EAAOE,OAAO,wBAOxB,iDAAWT,KAAX,aAEEE,EAAKzB,KAAI,SAAAiC,GAGP,OADAP,EAAWO,GAGT,aADA,CACA,gCAAQA,EAAIC,eAAZ,aAEED,EAAIE,MAAMnC,KAAI,SAAAoC,GAEZ,OACE,8CAAQA,EAAKC,gBAAb,aAEED,EAAKJ,OAAO,4BC/EjBM,EAPM,SAAC,GAAmB,EAAlBjC,aAErB,OACE,uC,yBCkCWkC,EAnCc,SAACzD,GAAW,IAAD,EACL0D,YAAc1D,EAAM2D,WAAYC,KAD3B,mBAC/BC,EAD+B,KACvBC,EADuB,KAGhCC,EAAcF,GAAU,GAW9B,OACE,qBAAKG,UAAU,cAAf,SACKhE,EAAMiE,YAAY/C,KAAI,SAAAgD,GACrB,IAAMC,EAAMD,EAAO3D,OAAOP,EAAMoE,SAC1BC,EAAaN,EAAYO,SAASH,GACvC,OACE,wBAAOH,UAAS,2BAAsBK,EAAa,UAAY,KAA/D,UACC,qBAAKL,UAAU,oBACf,uBAAO7C,KAAK,WACVoD,QAASF,EACTG,MAAOL,EACPM,SAAU,kBApBND,EAoBqBL,EAnBlCJ,EAAYO,SAASE,GACtBT,EAAYW,OAAOX,EAAYY,QAAQH,GAAQ,GAE/CT,EAAYa,KAAKJ,QAEnBV,EAAeC,GANA,IAACS,KAsBHL,EAPJ,KAOWD,EAAO3D,OAAP,MAPX,aCvBE,MAA0B,kCCgD1BsE,EA/BgB,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACvDC,EAAWnD,YAfK,SAACoD,EAAKC,GAC5B,IAAMC,EAAc,SAAAC,IACdH,EAAII,SAAYJ,EAAII,QAAQC,SAASF,EAAEG,SAAYN,EAAII,QAAQG,WAAWF,SAASF,EAAEG,SACvFL,KAGJrD,aAAgB,WAEd,OADA4D,SAASC,iBAAiB,QAASP,GAC5B,WACLM,SAASE,oBAAoB,QAASR,OAO1CS,CAAgBZ,GAAU,WAAOL,GAAQI,OAEzC,IAAMc,EAAOlB,EAAI,UAAMC,EAAN,MAAkB,MACnC,OACE,cAAC,WAAD,UACE,sBACEK,IAAKD,EACLnB,UAAU,oBACV5D,MAAO,CACL4F,KAAMA,EAENjB,MAAM,GAAD,OAAKA,EAAL,OANT,UASE,sBAAKf,UAAU,2BAAf,UACE,qBAAKA,UAAU,qBACb5D,MAAO,CAAE6F,gBAAgB,OAAD,OAASC,EAAT,MACxBC,QAAS,kBAAMjB,OAEjB,qBAAKlB,UAAU,eAAf,SACGiB,OAGL,qBAAKjB,UAAU,4BAAf,SAA4CgB,UCnC9CoB,EAAc,CAClB,CACEC,IAAK,YACLC,MAAO,aAET,CACED,IAAK,SACLC,MAAO,UAET,CACED,IAAK,OACLC,MAAO,QAET,CACED,IAAK,gBACLC,MAAO,SAET,CACED,IAAK,YACLC,MAAO,aAET,CACED,IAAK,YACLC,MAAO,aAET,CACED,IAAK,SACLC,MAAO,UAET,CACED,IAAK,QACLC,MAAO,UAIUzG,E,4MACnB0G,MAAQ,CACNC,cAAc,EACdC,mBAAoB,M,qDAGtB,SAAgBC,GACd3G,KAAK4G,SAAS,CACZH,aAAcE,M,4BAIlB,SAAgBlC,GACdzE,KAAK4G,SAAS,CACZF,mBAAoBjC,IAEtBA,GAASzE,KAAK6G,iBAAgB,K,kCAGhC,WACE,OAAQ7G,KAAKwG,MAAME,oBACjB,IAAK,YACH,OAAO,cAACI,EAAD,CAAaC,WAAW,YAAYnD,WAAW,WAAWS,QAAQ,OAAOH,YAAalE,KAAKC,MAAM+G,QAAQC,YAClH,IAAK,SACH,OAAO,cAACH,EAAD,CAAaC,WAAW,SAASnD,WAAW,SAASS,QAAQ,QAAQH,YAAalE,KAAKC,MAAM+G,QAAQE,SAC9G,IAAK,gBACH,OAAO,cAACJ,EAAD,CAAaC,WAAW,gBAAgBnD,WAAW,OAAOS,QAAQ,OAAOH,YAAalE,KAAKC,MAAM+G,QAAQG,QAClH,IAAK,OACH,OAAO,cAACL,EAAD,CAAaC,WAAW,OAAOnD,WAAW,OAAOS,QAAQ,MAAMH,YAAalE,KAAKC,MAAM+G,QAAQI,OACxG,IAAK,YACH,OAAO,cAACN,EAAD,CAAaC,WAAW,YAAYnD,WAAW,WAAWS,QAAQ,WAAWH,YAAalE,KAAKC,MAAM+G,QAAQK,YACtH,IAAK,YACH,OAAO,cAACP,EAAD,CAAaC,WAAW,YAAYnD,WAAW,UAAUS,QAAQ,UAAUH,YAAalE,KAAKC,MAAM+G,QAAQM,YACpH,IAAK,SACH,OAAO,cAACR,EAAD,CAAaC,WAAW,SAASnD,WAAW,OAAOS,QAAQ,OAAOH,YAAalE,KAAKC,MAAM+G,QAAQO,SAC3G,QACE,OAAO,2B,oBAKb,WAAU,IAAD,OACP,OAAO,sBAAKtD,UAAU,oBAAf,UACH,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,qBAEAoC,EAAYlF,KAAI,SAAAqG,GAAC,OACf,sBACEvD,UAAS,sBAAiB,EAAKuC,MAAME,qBAAuBc,EAAElB,IAAM,SAAW,KAC/EF,QAAS,kBAAM,EAAKqB,eAAeD,EAAElB,MAFvC,UAIGkB,EAAEjB,MACH,qBAAKtC,UAAU,aAAa5D,MAAO,CAAE6F,gBAAgB,OAAD,OAASC,EAAT,iBAK1D,cAAC,EAAD,CAAwBpB,KAAM/E,KAAKwG,MAAMC,aAAczB,MAAM,MAC7DE,MAAOlF,KAAKwG,MAAME,mBAAqBL,EAAYqB,MAAK,SAAAlC,GAAC,OAAIA,EAAEc,MAAQ,EAAKE,MAAME,sBAAoBH,MAAQ,GAC9GpB,QAAS,WACP,EAAK0B,iBAAgB,GACrB,EAAKY,gBAAe,IAEtBxC,SACEjF,KAAK2H,gC,GAhE2BrG,aCvB3BsG,EAjBa,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EACVlE,YAAckE,EAAWhE,KADf,mBACpCC,EADoC,KAC5BC,EAD4B,KAGrCC,EAAcF,GAAU,GAS9B,OAAOE,EAAY7C,KAAI,SAAAsD,GAAK,OACxB,sBAAKR,UAAU,oBAAoBmC,QAAS,kBAR/B,SAAC3B,GACbT,EAAYO,SAASE,IACtBT,EAAYW,OAAOX,EAAYY,QAAQH,GAAQ,GAEjDV,EAAeC,GAIqC8D,CAASrD,IAA3D,UAAoEA,EAApE,IAA2E,4C,iBCJ5DsD,E,4MACnBvB,MAAQ,CACRhF,aAAc,GACZwG,SAAS,EACTC,gBAAiB,Q,uDAEnB,WACEjI,KAAKkI,c,gCAEP,SAAmBC,GACbC,KAAKC,UAAUF,EAAUrE,UAAYsE,KAAKC,UAAUrI,KAAKC,MAAM6D,SACjE9D,KAAKkI,c,gCAGT,SAAmB9G,GACjBpB,KAAK4G,SAAS,CACZqB,gBAAiB7G,M,uBAGrB,WAAc,IAAD,OACPkH,EAAOtI,KACXsI,EAAK1B,SAAS,CACZoB,SAAS,IAEb,IAAIO,EAAO,IAAIC,IAAS,CACvBC,OAAOC,sBACLH,KAAK,qBAEFI,EAAW,GAEf3I,KAAKC,MAAM6D,QAAU8E,OAAOC,KAAK7I,KAAKC,MAAM6D,QAAQgF,SAAQ,SAAAC,GAC1D,IAAIC,EAAYC,MAAMC,QAAQ,EAAKjJ,MAAM6D,OAAOiF,IAAa,EAAK9I,MAAM6D,OAAOiF,GAAY,CAAC,EAAK9I,MAAM6D,OAAOiF,IAC9GJ,EAAS9D,KAAK,MAAQmE,EAAU7H,KAAI,SAAAgI,GAAC,MAAI,SAASA,EAAE,MAAQJ,EAAW,QAAMK,KAAK,MAAO,QAE3F,IAAIC,EAAUV,EAASjI,OAAS,EAAI,OAASiI,EAASS,KAAK,MAAO,IAAM,GAGxEb,EAAK,eAAee,OAAO,CACvBC,KAAM,YACNC,gBAAiBH,IAClBI,WAAU,SAASC,EAAKC,GACnBD,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACjBpF,aAAcmI,EACT3B,SAAS,S,+BAIjB,WACE,OAAOY,OAAOC,KAAK7I,KAAKC,MAAM6D,QAAQ3C,KAAI,SAAA0G,GAAS,OACjD,cAAC,EAAD,CAAqBA,UAAWA,S,mCAGpC,WACE,OAAO7H,KAAKwG,MAAMyB,iBAChB,IAAK,OACH,OAAO,cAAC,EAAD,CAAezG,aAAcxB,KAAKwG,MAAMhF,eACjD,IAAK,OACH,OAAO,cAAC,EAAD,CAAeA,aAAcxB,KAAKwG,MAAMhF,eACjD,IAAK,MACH,OAAO,cAAC,EAAD,CAAcA,aAAcxB,KAAKwG,MAAMhF,eAChD,QACE,OAAO,2B,oBAGb,WAAU,IAAD,OACP,OAAO,sBAAKyC,UAAU,YAAf,UACC,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CAAe+C,QAAShH,KAAKC,MAAM+G,YAErC,sBAAK/C,UAAU,eAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,sBAAyCjE,KAAKwG,MAAMhF,aAAad,UACjE,sBAAKuD,UAAU,oBAAf,UACE,qBAAKA,UAAS,yBAAkD,QAA9BjE,KAAKwG,MAAMyB,gBAA4B,SAAW,IAAM7B,QAAS,kBAAM,EAAK0D,mBAAmB,SAAjI,eACA,qBAAK7F,UAAS,yBAAkD,QAA9BjE,KAAKwG,MAAMyB,gBAA4B,SAAW,IAAM7B,QAAS,kBAAM,EAAK0D,mBAAmB,SAAjI,eACA,qBAAK7F,UAAS,wBAAiD,OAA9BjE,KAAKwG,MAAMyB,gBAA2B,SAAW,IAAM7B,QAAS,kBAAM,EAAK0D,mBAAmB,QAA/H,kBAEF,qBAAK7F,UAAU,gBAAf,SACE,uBAAO7C,KAAK,cAGhB,qBAAK6C,UAAU,0BAAf,SACGjE,KAAKC,MAAM6D,QAAU9D,KAAK+J,sBAE5B/J,KAAKwG,MAAMwB,QACV,sBAAK/D,UAAU,UAAf,UAAyB,cAAC+F,EAAA,EAAD,CAASC,UAAU,WAA5C,uBAEEjK,KAAKkK,kC,GAxFe5I,a,WCLjB6I,E,4MACnB3D,MAAQ,CACN4D,SAAU,I,uDAEZ,WACE,IAAI9B,EAAOtI,KACF,IAAIwI,IAAS,CACvBC,OAAOC,sBACLH,KAAK,oBAENA,CAAK,eAAeb,KAAK1H,KAAKC,MAAMoK,YAAY,SAASX,EAAKY,GACxDZ,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZwD,SAAUE,S,+BAIhB,WACE,IACIC,ECzBqBzJ,EDwBrB0J,EAAO,wBAEX,IACED,EAAS,IAAIE,IAAIzK,KAAKwG,MAAM4D,SAAS5J,OAApB,KACjB,MAAOkJ,GACPc,EAAO,oDAET,GAAID,EAEF,GAAIA,EAAOG,SAASnG,SAAS,SAAU,CACrC,IAAIoG,GChCV7J,GAF2BA,EDkCmByJ,EAAOK,MChC3CC,QAAQ,UAAU,IAAIC,MAAM,0CAC/B,GACAhK,EAAI,GAAGgK,MAAM,iBACV,GAGHhK,ED2BD0J,EAAO,wBAAQxF,MAAM,MAAM+F,OAAO,MAAO7F,MAAM,UAAUrE,IAAK,iCAAmC8J,EAAWK,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,SAIzO,GAAIX,EAAOG,SAASnG,SAAS,SAAU,CAC1C,IAAI4G,EC3BL,SAAqBrK,GAC1B,IAAIsK,EAAK,GAELC,EAAQvK,EAAIuK,MADH,4CAKb,OAHIA,IACFD,EAAKC,EAAM,IAEND,EDoBaE,CAAsBf,EAAOK,MAC3CJ,EAAO,wBAAQxF,MAAM,MAAM+F,OAAO,MAAM7F,MAAM,UAAUrE,IAAK,kCAAoCsK,EAASH,YAAY,IAAIC,MAAM,2CAA2CC,iBAAe,SAIvL,GAAIX,EAAOG,SAASnG,SAAS,eAAgB,CAChD,IAAIgH,ECvBL,SAAwBzK,GAC7B,OAAOA,EAAI+J,QAAQ,UAAU,SDsBNS,CAAyBf,EAAOK,MACjDJ,EAAO,wBAAQxF,MAAM,MAAM+F,OAAO,MAAM7F,MAAM,UAAUrE,IAAK0K,EAAYP,YAAY,IAAIC,MAAM,2CAA2CC,iBAAe,SAItJ,GAAIX,EAAOG,SAASnG,SAAS,WAAY,CAC5C,IAAIiH,ECzBL,SAAuB1K,GAE5B,IAAIgD,EAAS,IAAI2G,IAAI3J,GACrB,OAAOgD,EAAO2H,OAAS,UAAY3H,EAAO4H,SDsBnBJ,CAAyBf,EAAOK,MACjDJ,EAAO,wBAAQxF,MAAM,MAAM+F,OAAO,MAAM7F,MAAM,UAAUrE,IAAK2K,EAAYR,YAAY,IAAIW,kBAAkB,OAAOV,MAAM,yBAGjHV,EAAOG,SAASnG,SAAS,gBAChCiG,EAAO,wBAAQxF,MAAM,OAAO+F,OAAO,MAAMa,UAAU,KAAKZ,YAAY,KAAKC,MAAM,WAAWpK,IAAK,wCAA0CgL,mBAAmBtB,EAAOK,MAAQ,2IAI/K,OAAOJ,I,2BAET,WACE,IAAIsB,EAAkB,0DAClBC,EAAS/L,KAAKwG,MAAM4D,SAAS5J,OAApB,YAYb,MAXe,YAAXuL,GAGgB,UAAXA,EAFPD,EAAkB,qBAAKjL,IAAKb,KAAKwG,MAAM4D,SAAS5J,OAApB,YAA0C,GAAGM,IAAKkL,IAAKhM,KAAKwG,MAAM4D,SAAS5J,OAAO,cAM5F,UAAXuL,IAEPD,EAAkB9L,KAAKiM,qBAElBH,I,0BAET,WAAgB,IAAD,OACb,OAAO,sBAAK7H,UAAU,oBAAf,UACG,sBAAKA,UAAU,iBAAf,UACGjE,KAAKwG,MAAM4D,SAAS5J,OAAO,YAC5B,qBAAKyD,UAAU,gBAEjB,qBAAKA,UAAU,gBAAf,SACGjE,KAAKwG,MAAM4D,SAAS5J,OAAO,yBAE9B,qBAAKyD,UAAU,oBAAf,SACG,CAAC,YAAa,YAAa,cAAe,OAAQ,UAAW,OAAQ,WAAY,UAAW,UAAW,YAAa,WAAY,eAAe9C,KAAI,SAAAmF,GAClJ,OAAO,sBAAKrC,UAAU,WAAf,UACL,qBAAKA,UAAU,aAAf,SAA6BqC,IAC7B,qBAAKrC,UAAU,aAAf,SAA6BgF,MAAMC,QAAQ,EAAK1C,MAAM4D,SAAS5J,OAAO8F,IAAQ,EAAKE,MAAM4D,SAAS5J,OAAO8F,GAAK8C,KAAK,MAAQ,EAAK5C,MAAM4D,SAAS5J,OAAO8F,OAFlHA,QAOzCtG,KAAKwG,MAAM4D,SAAS5J,OAApB,KAAqC,qBAAKyD,UAAU,kBAAf,SACpC,mBAAG2G,KAAM5K,KAAKwG,MAAM4D,SAAS5J,OAApB,IAAT,qC,oBAOd,WACE,OAAOR,KAAKwG,MAAM4D,SAAS5J,OACxB,sBAAKyD,UAAU,gBAAf,UACC,qBAAKA,UAAU,mBAAf,SACGjE,KAAKkM,kBAER,qBAAKjI,UAAU,8BAAf,SACGjE,KAAKmM,oBAIX,sBAAKlI,UAAU,UAAf,UAAyB,cAAC+F,EAAA,EAAD,CAASC,UAAU,WAA5C,0B,GA9GqC3I,a,kBEN3B,MAA0B,iC,OC6H1B8K,E,4MA1Gd5F,MAAQ,CACPW,MAAO,GACLF,UAAW,GACXI,UAAW,GACXD,KAAM,GACNE,UAAW,GACXJ,OAAQ,GACRK,OAAQ,I,uDAEV,WACE,IAAIe,EAAOtI,KACTuI,EAAO,IAAIC,IAAS,CACvBC,OAAOC,sBACLH,KAAK,qBAENA,EAAK,aAAae,OAAO,CACrBC,KAAM,YACNC,gBAAiB,cAClBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACjBO,MAAOnF,OAGRuG,EAAK,iBAAiBe,OAAO,CACzBC,KAAM,YACNC,gBAAiB,cAClBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZK,UAAWjF,OAGjBuG,EAAK,iBAAiBe,OAAO,CAC3BC,KAAM,YACNC,gBAAiB,cAChBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZS,UAAWrF,OAGjBuG,EAAK,YAAYe,OAAO,CACtBC,KAAM,YACNC,gBAAiB,cAChBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZQ,KAAMpF,OAGZuG,EAAK,kBAAkBe,OAAO,CAC5BC,KAAM,YACNC,gBAAiB,cAChBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZU,UAAWtF,OAGjBuG,EAAK,eAAee,OAAO,CACzBC,KAAM,YACNC,gBAAiB,cAChBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZM,OAAQlF,OAGduG,EAAK,eAAee,OAAO,CACzBC,KAAM,YACNC,gBAAiB,cAChBC,WAAU,SAASC,EAAK1H,GACnB0H,EAAOE,QAAQC,MAAMH,GACzBpB,EAAK1B,SAAS,CACZW,OAAQvF,S,oBAIhB,WAAU,IAAD,OACP,OACD,cAAC,IAAD,UACK,cAAC,IAAD,CAAoBqK,iBAAkBC,IAAtC,SACE,sBAAKrI,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAMlE,GAAG,IAAT,SAAa,qBAAKc,IAAK0L,EAAMP,IAAI,aAEnC,qBAAK/H,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuI,OAAK,EAACC,KAAK,wBAAwBtJ,OAAQ,SAAClD,GACjD,OAAO,cAAC,EAAD,CAAcoK,WAAYpK,EAAMoL,MAAMvH,OAAOuG,gBAEtD,cAAC,IAAD,CAAOoC,KAAK,IAAItJ,OAAQ,SAAClD,GACrB,IAAIyM,EAAYC,IAAGC,MAAM3M,EAAM4M,SAASC,OAAOC,MAAM,IACrD,OAAQ,cAAC,EAAD,CAAUvL,aAAc,EAAKgF,MAAMhF,aAAcwF,QAAS,EAAKR,MAAO1C,OAAQ4I,uB,GA/FxFpL,aCNH0L,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAAStK,OACP,cAAC,IAAMuK,WAAP,UACE,cAAC,EAAD,MAEF7H,SAAS8H,eAAe,SAM1BX,M","file":"static/js/main.65bb2268.chunk.js","sourcesContent":["import {Component} from 'react'\nimport {Card, Badge} from 'react-bootstrap'\nimport {NavLink} from \"react-router-dom\"\n\nexport default class ResourceCard extends Component {\n  render() {\n    return <NavLink to={\"/resource/\" + this.props.item.id}>\n            <Card style={{ marginBottom: '10px', minHeight: '280px'}}>\n              {(this.props.item.fields.Attachments && this.props.item.fields.Attachments.length > 0)\n                && <Card.Img variant=\"top\" src={this.props.item.fields.Attachments[0].url} />}\n              <Card.Body>\n                <Card.Title>{this.props.item.fields['Title ID']}</Card.Title>\n                <Card.Text>\n                </Card.Text>\n                {this.props.item.fields.Type_name && this.props.item.fields.Type_name.map(type => (\n                    <Badge variant=\"info\">{type}</Badge>\n                ))}\n              \n              </Card.Body>\n            </Card>\n          </NavLink>\n  }\n}","import {Container, Row, Col} from 'react-bootstrap'\nimport ResourceCard from '../components/ResourceCard'\n\nconst ResourcesGrid = ({archiveItems}) => {\n\n  return (\n    <Container>\n      <Row xs={2} md={3} lg={4}>\n        {archiveItems.map((item) => (\n          <Col key={item.id}>\n            <ResourceCard item={item}></ResourceCard>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  )\n}\n\nexport default ResourcesGrid\n","import React from 'react';\nimport { useTable } from 'react-table'\n\nconst ResourcesList = ({archiveItems}) => {\n  const data = React.useMemo(\n    () => archiveItems.map(i => i.fields),\n    []\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Pandemics',\n        accessor: 'Pandemic',\n      },\n      {\n        Header: 'Title',\n        accessor: 'Title ID',\n      },\n      {\n        Header: 'Type',\n        accessor: 'Type',\n      },\n      {\n        Header: 'Themes',\n        accessor: 'Themes',\n      },\n      {\n        Header: 'Tags',\n        accessor: 'Tags',\n      },\n      {\n        Header: 'Languages',\n        accessor: 'Language',\n      },\n      {\n        Header: 'Contributor',\n        accessor: 'Contributor',\n      },\n    ],\n    []\n  )\n\n  const tableInstance = useTable({ columns, data })\n \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance\n  \n  return (\n    // apply the table props\n    <table {...getTableProps()}>\n      <thead>\n        {// Loop over the header rows\n        headerGroups.map(headerGroup => (\n          // Apply the header row props\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {// Loop over the headers in each row\n            headerGroup.headers.map(column => (\n              // Apply the header cell props\n              <th {...column.getHeaderProps()}>\n                {// Render the header\n                column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      {/* Apply the table body props */}\n      <tbody {...getTableBodyProps()}>\n        {// Loop over the table rows\n        rows.map(row => {\n          // Prepare the row for display\n          prepareRow(row)\n          return (\n            // Apply the row props\n            <tr {...row.getRowProps()}>\n              {// Loop over the rows cells\n              row.cells.map(cell => {\n                // Apply the cell props\n                return (\n                  <td {...cell.getCellProps()}>\n                    {// Render the cell contents\n                    cell.render('Cell')}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default ResourcesList\n","\nconst ResourcesMap = ({archiveItems}) => {\n\n  return (\n    <div>Map</div>\n  )\n}\n\nexport default ResourcesMap\n","import * as React from 'react';\nimport { useQueryParam, ArrayParam } from 'use-query-params';\n\nconst UseQueryParamExample = (props) => {\n  const [params, setFilterValue] = useQueryParam(props.filterName, ArrayParam);\n\n  const paramsArray = params || []\n\n  const onChange = (value) => {\n    if(paramsArray.includes(value)){\n      paramsArray.splice(paramsArray.indexOf(value), 1)\n    } else {\n      paramsArray.push(value)\n    }\n    setFilterValue(paramsArray)\n  }\n\n  return (\n    <div className=\"filter-list\">\n        {props.filterItems.map(filter =>{\n          const val = filter.fields[props.labelBy]\n          const isSelected = paramsArray.includes(val)\n           return (\n             <label className={`filter-list-item ${isSelected ? \"checked\" : \" \"}`}>\n              <div className=\"circle-checkbox\"></div>\n              <input type=\"checkbox\"\n                checked={isSelected} \n                value={val} \n                onChange={() => onChange(val)}\n                ></input>\n                {val} ({filter.fields['Count']})\n             </label>\n           )\n        })}\n    </div>\n  );\n};\n\nexport default UseQueryParamExample;","export default __webpack_public_path__ + \"static/media/arrow.9282adbf.svg\";","import * as React from 'react';\nimport arrow from '../assets/arrow.svg';\n\nconst useClickOutside = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target) && !ref.current.parentNode.contains(e.target)) {\n      callback();\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nconst FilterSecondarySidebar = ({open, width, children, title, onClose }) => {\n  const clickRef = React.useRef();\n  useClickOutside(clickRef, () => {open && onClose()});\n\n  const left = open ? `${width}px` : '0px'\n  return (\n    <React.Fragment>\n      <div\n        ref={clickRef}\n        className=\"secondary-sidebar\"\n        style={{\n          left: left,\n          //transform: `translatex(${xPosition}px)`,\n          width: `${width}px`,\n        }}\n      >\n        <div className=\"secondary-sidebar-header\">\n          <div className=\"arrow-icon reverse\" \n            style={{ backgroundImage: `url(${arrow})` }}\n            onClick={() => onClose()}\n            ></div>\n          <div className=\"filter-title\">\n            {title}\n          </div>\n        </div>\n        <div className=\"secondary-sidebar-content\">{children}</div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default FilterSecondarySidebar\n","import {Component} from 'react'\nimport './FilterSidebar.sass';\n\nimport FilterBlock from './FilterBlock'\nimport FilterSecondarySidebar from './FilterSecondarySidebar'\nimport arrow from '../assets/arrow.svg';\n\nconst filtersList = [\n  {\n    key: 'pandemics',\n    label: 'Pandemics'\n  },\n  {\n    key: 'themes',\n    label: 'Themes'\n  },\n  {\n    key: 'tags',\n    label: 'Tags'\n  },\n  {\n    key: 'resource_type',\n    label: 'Types'\n  },\n  {\n    key: 'languages',\n    label: 'Languages'\n  },\n  {\n    key: 'countries',\n    label: 'Countries'\n  },\n  {\n    key: 'cities',\n    label: 'Cities'\n  },\n  {\n    key: 'dates',\n    label: 'Dates'\n  }\n]\n\nexport default class ResourceCard extends Component {\n  state = {\n    showSideMenu: false,\n    currentFilterPanel: null\n\t}\n\n  setShowSideMenu(show) {\n    this.setState({\n      showSideMenu: show\n    });\n  }\n\n  setFilterPanel (value) {\n    this.setState({\n      currentFilterPanel: value\n    })\n    value && this.setShowSideMenu(true)\n  }\n\n  currentFilterContent () {\n    switch (this.state.currentFilterPanel) {\n      case 'pandemics':\n        return <FilterBlock blockTitle=\"Pandemics\" filterName=\"Pandemic\" labelBy=\"Name\" filterItems={this.props.filters.pandemics}></FilterBlock>\n      case 'themes':\n        return <FilterBlock blockTitle=\"Themes\" filterName=\"Themes\" labelBy=\"Theme\" filterItems={this.props.filters.themes}></FilterBlock>\n      case 'resource_type':\n        return <FilterBlock blockTitle=\"Resource Type\" filterName=\"Type\" labelBy=\"Type\" filterItems={this.props.filters.types}></FilterBlock>\n      case 'tags':\n        return <FilterBlock blockTitle=\"Tags\" filterName=\"Tags\" labelBy=\"Tag\" filterItems={this.props.filters.tags}></FilterBlock>\n      case 'languages':\n        return <FilterBlock blockTitle=\"Languages\" filterName=\"Language\" labelBy=\"Language\" filterItems={this.props.filters.languages}></FilterBlock>\n      case 'countries':\n        return <FilterBlock blockTitle=\"Countries\" filterName=\"Country\" labelBy=\"Country\" filterItems={this.props.filters.countries}></FilterBlock>\n      case 'cities':\n        return <FilterBlock blockTitle=\"Cities\" filterName=\"City\" labelBy=\"City\" filterItems={this.props.filters.cities}></FilterBlock>\n      default:\n        return <div></div>\n    }\n\n  }\n\n  render() {\n    return <div className=\"sidebar-container\">\n        <div className=\"primary-sidebar\">\n          <div className=\"sidebar-title\">Filters</div>\n          {\n          filtersList.map(t =>\n            <div\n              className={`filter-type ${this.state.currentFilterPanel === t.key ? \"active\" : \" \"}`} \n              onClick={() => this.setFilterPanel(t.key)}\n            >\n              {t.label}\n              <div className=\"arrow-icon\" style={{ backgroundImage: `url(${arrow})` }}></div>\n            </div>\n          )\n          }\n        </div>\n        <FilterSecondarySidebar open={this.state.showSideMenu} width=\"250\"\n        title={this.state.currentFilterPanel ? filtersList.find(e => e.key === this.state.currentFilterPanel).label : ''}\n        onClose={() => {\n          this.setShowSideMenu(false)\n          this.setFilterPanel(false)\n        }}\n        children={\n          this.currentFilterContent()\n        }>\n        </FilterSecondarySidebar>\n      </div>\n  }\n}","import { useQueryParam, ArrayParam } from 'use-query-params';\n\nconst CurrentFiltersRecap = ({filterKey}) => {\n  const [params, setFilterValue] = useQueryParam(filterKey, ArrayParam);\n\n  const paramsArray = params || []\n\n  const onRemove = (value) => {\n    if(paramsArray.includes(value)){\n      paramsArray.splice(paramsArray.indexOf(value), 1)\n    }\n    setFilterValue(paramsArray)\n  }\n\n  return paramsArray.map(value =>\n      <div className=\"filter-recap-item\" onClick={() => onRemove(value)}>{value} <span>X</span></div>\n  )\n}\n\nexport default CurrentFiltersRecap;","import {Component} from 'react'\nimport './HomeView.sass';\nimport {Spinner} from 'react-bootstrap'\nimport ResourcesGrid from '../components/ResourcesGrid'\nimport ResourcesList from '../components/ResourcesList'\nimport ResourcesMap from '../components/ResourcesMap'\n\nimport FilterSidebar from '../components/FilterSidebar'\nimport CurrentFiltersRecap from '../components/CurrentFiltersRecap'\nimport Airtable from 'airtable'\n\nexport default class HomeView extends Component {\n  state = {\n\t\tarchiveItems: [],\n    loading: false,\n    currentViewType: 'grid'\n\t}\n  componentDidMount() {\n    this.fetchData()\n  }\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.params) !== JSON.stringify(this.props.params)) {\n      this.fetchData()\n    }\n  }\n  setCurrentViewType(type) {\n    this.setState({\n      currentViewType: type\n    })\n  }\n  fetchData () {\n    var self = this\n    self.setState({\n      loading: true\n    });\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n\n    let formulas = []\n\n    this.props.params && Object.keys(this.props.params).forEach(paramKey => {\n      let filterVal = Array.isArray(this.props.params[paramKey]) ? this.props.params[paramKey] : [this.props.params[paramKey]]\n      formulas.push('OR(' + filterVal.map(v => 'FIND(\"'+v+'\",{' + paramKey + '})').join(', ') +')')\n    })\n    let formula = formulas.length > 0 ? 'AND(' + formulas.join(', ') +')' : ''\n\n    //OR(RECORD_ID() = ‘recRjdJSziwMjfhO8’, RECORD_ID() = ‘recdRonUzKAIMPOxb’)\n    base('Data Sample').select({\n        view: 'Grid view',\n        filterByFormula: formula\n    }).firstPage(function(err, records) {\n        if (err) { console.error(err); return; }\n        self.setState({\n\t\t\t\t\tarchiveItems: records,\n          loading: false\n\t\t\t\t});\n    })\n  }\n  renderParamsRecap () {\n    return Object.keys(this.props.params).map(filterKey =>\n      <CurrentFiltersRecap filterKey={filterKey}></CurrentFiltersRecap>\n    )\n  }\n  renderCurrentViewType () {\n    switch(this.state.currentViewType) {\n      case 'grid':\n        return <ResourcesGrid archiveItems={this.state.archiveItems}></ResourcesGrid>\n      case 'list':\n        return <ResourcesList archiveItems={this.state.archiveItems}></ResourcesList>\n      case 'map':\n        return <ResourcesMap archiveItems={this.state.archiveItems}></ResourcesMap>\n      default:\n        return <div></div>\n    }\n  }\n  render() {\n    return <div className=\"home-view\">\n            <div className=\"sidebar\">\n              <FilterSidebar filters={this.props.filters}></FilterSidebar>\n            </div>\n            <div className=\"main-content\">\n              <div className=\"content-top-bar\">\n                <div className=\"results-count\">Results: {this.state.archiveItems.length}</div>\n                <div className=\"results-view-type\">\n                  <div className={`view-type grid ${this.state.currentViewType == 'grid' ? \"active\" : \"\"}`} onClick={() => this.setCurrentViewType('grid')}>G</div>\n                  <div className={`view-type list ${this.state.currentViewType == 'list' ? \"active\" : \"\"}`} onClick={() => this.setCurrentViewType('list')}>L</div>\n                  <div className={`view-type map ${this.state.currentViewType == 'map' ? \"active\" : \"\"}`} onClick={() => this.setCurrentViewType('map')}>M</div>\n                </div>\n                <div className=\"results-seach\">\n                  <input type=\"text\"></input>\n                </div>\n              </div>\n              <div className=\"content-filters-summary\">\n                {this.props.params && this.renderParamsRecap()}\n              </div>\n              {this.state.loading ? \n                <div className=\"loading\"><Spinner animation=\"border\" />Loading resources</div>\n                  :\n                  this.renderCurrentViewType()\n            }\n            </div>\n          </div>\n  }\n}","import {Component} from 'react'\nimport './ResourceView.sass';\nimport Airtable from 'airtable'\nimport {Spinner} from 'react-bootstrap'\nimport * as embedUtils from '../utils/embed'\n\nexport default class ResourceView extends Component {\n  state = {\n    resource: {}\n  }\n  componentDidMount() {\n    var self = this\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n\n    base('Data Sample').find(this.props.resourceId, function(err, record) {\n      if (err) { console.error(err); return; }\n      self.setState({\n        resource: record\n      })\n    })\n  }\n  generateEmbedCode () {\n    let code = <div></div>\n    let source\n    try {\n      source = new URL(this.state.resource.fields['URL'])\n    } catch (err) {\n      code = <div>No url is defined</div>\n    }\n    if (source){\n      // YouTube\n      if (source.hostname.includes('youtu')) {\n        let youtubeId = embedUtils.getYoutubeId(source.href)\n        code = <iframe width=\"640\" height=\"360\"  title=\"content\" src={'https://www.youtube.com/embed/' + youtubeId} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n      }\n\n      // VIMEO\n      else if (source.hostname.includes('vimeo')) {\n        let vimeoId = embedUtils.getVimeoId(source.href)\n        code = <iframe width=\"640\" height=\"360\" title=\"content\" src={\"https://player.vimeo.com/video/\" + vimeoId} frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n      }\n\n      // Archive\n      else if (source.hostname.includes('archive.org')) {\n        let archiveUrl = embedUtils.getArchiveURL(source.href)\n        code = <iframe width=\"640\" height=\"360\" title=\"content\" src={archiveUrl} frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n      }\n\n      // Spotify\n      else if (source.hostname.includes('spotify')) {\n        let spotifyUrl = embedUtils.getSpotifyUrl(source.href)\n        code = <iframe width=\"640\" height=\"360\" title=\"content\" src={spotifyUrl} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n      }\n      // Soundcloud\n      else if (source.hostname.includes('soundcloud')) {\n        code = <iframe width=\"100%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src={'https://w.soundcloud.com/player/?url=' + encodeURIComponent(source.href) + '&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true'}></iframe>\n      }\n    }\n\n    return code\n  }\n  resourceMedia() {\n    let resourceContent = <span>No item format defined</span>\n    let format = this.state.resource.fields['item_format']\n    if (format === 'Website') {\n      resourceContent = <img src={this.state.resource.fields['Attachments'][0].url} alt={this.state.resource.fields['Title ID']}></img>\n    } \n    else if (format === 'Image') {\n      // Here maybe a gallery?\n      resourceContent = <img src={this.state.resource.fields['Attachments'][0].url} alt={this.state.resource.fields['Title ID']}></img>\n    }\n    else if (format === 'Embed') {\n      // Here maybe a gallery?\n      resourceContent = this.generateEmbedCode()\n    }\n    return resourceContent\n  }\n  resourceInfo() {\n    return <div className=\"resource-sideinfo\">\n              <div className=\"resource-title\">\n                {this.state.resource.fields['Title ID']}\n                <div className=\"bookmark\"></div>\n              </div>\n              <div className=\"resource-desc\">\n                {this.state.resource.fields['Summary (limit 500)']}\n              </div>\n              <div className=\"resource-metadata\">\n                {['Pandemics', 'Type_name', 'Themes_name', 'Tags', 'Country', 'City', 'Language', 'Credits', 'Created', 'Published', 'Archived', 'Contributor'].map(key => {\n                  return <div className=\"meta-row\" key={key}>\n                    <div className=\"meta-title\">{key}</div>\n                    <div className=\"meta-value\">{Array.isArray(this.state.resource.fields[key]) ? this.state.resource.fields[key].join(', ') : this.state.resource.fields[key]}</div>\n                  </div>\n                  }\n                )}\n              </div>\n              {this.state.resource.fields['URL'] && <div className=\"resource-source\">\n                <a href={this.state.resource.fields['URL']}>GO TO THE SOURCE</a>\n              </div>\n              }\n\n          </div>\n  }\n\n  render() {\n    return this.state.resource.fields ? \n      (<div className=\"resource-view\">\n        <div className=\"resource-preview\">\n          {this.resourceMedia()}\n        </div>\n        <div className=\"resource-sideinfo-container\">\n          {this.resourceInfo()}\n        </div>\n      </div>)\n    :\n    (<div className=\"loading\"><Spinner animation=\"border\" />Loading resource</div>)\n  }\n}","export function getYoutubeId(url) {\n  var ID = '';\n  url = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/)\n  if(url[2]) {\n    ID = url[2].split(/[^0-9a-z_\\-]/i)\n    ID = ID[0]\n  }\n  else {\n    ID = url\n  }\n  return ID\n}\n\nexport function getVimeoId (url) {\n  var ID = '';\n  var regExp = /https:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/;\n  var match = url.match(regExp);\n  if (match){\n    ID = match[2]\n  }\n  return ID\n}\n\nexport function getArchiveURL (url) {\n  return url.replace('details','embed')\n}\n\nexport function getSpotifyUrl(url) {\n  //TODO: Not always is \"embed\", check what happens with songs/album/podcasts\n  let params = new URL(url)\n  return params.origin + '/embed/' + params.pathname\n}\n\n","export default __webpack_public_path__ + \"static/media/logo.65b2bc4b.svg\";","import './App.sass';\nimport {Component} from 'react'\nimport HomeView from './views/HomeView'\nimport ResourceView from './views/ResourceView'\nimport qs from 'qs'\n\nimport Airtable from 'airtable'\nimport logo from './assets/logo.svg';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n\tLink\n} from \"react-router-dom\";\n\nimport { QueryParamProvider } from 'use-query-params';\n\nclass App extends Component {\n\tstate = {\n\t\ttypes: [],\n    pandemics: [],\n    languages: [],\n    tags: [],\n    countries: [],\n    themes: [],\n    cities: []\n\t}\n  componentDidMount() {\n    var self = this\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n\n    base('Type list').select({\n        view: 'Grid view',\n        filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n\t\t\t\t\ttypes: data\n\t\t\t\t});\n    });\n    base('Pandemic list').select({\n        view: 'Grid view',\n        filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          pandemics: data\n        });\n    });\n    base('Language list').select({\n      view: 'Grid view',\n      filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          languages: data\n        });\n    });\n    base('Tag list').select({\n      view: 'Grid view',\n      filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          tags: data\n        });\n    });\n    base('Countries List').select({\n      view: 'Grid view',\n      filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          countries: data\n        });\n    });\n    base('Themes list').select({\n      view: 'Grid view',\n      filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          themes: data\n        });\n    });\n    base('Cities List').select({\n      view: 'Grid view',\n      filterByFormula: '{Count}>0'\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          cities: data\n        });\n    });\n  }\n  render() {\n    return (\n\t\t\t<Router>\n        <QueryParamProvider ReactRouterRoute={Route}>\n          <div className=\"App\">\n            <div className=\"header\">\n              <Link to=\"/\"><img src={logo} alt=\"logo\"/></Link>\n            </div>\n            <div className=\"app-content\">\n              <Switch>\n                <Route exact path=\"/resource/:resourceId\" render={(props)=>{\n                  return <ResourceView resourceId={props.match.params.resourceId}/>\n                }} />\n                <Route path=\"/\" render={(props) => {\n                    let urlParams = qs.parse(props.location.search.slice(1))\n                    return  <HomeView archiveItems={this.state.archiveItems} filters={this.state} params={urlParams}></HomeView>\n                  }}/>\n              </Switch>\n            </div>\n          </div>\n        </QueryParamProvider>\n\t\t\t</Router>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}