{"version":3,"sources":["components/ResourceCard.jsx","components/FilterBlock.jsx","components/FilterSidebar.jsx","views/HomeView.jsx","views/ResourceView.jsx","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["ResourceCard","to","this","props","item","id","Card","style","marginBottom","minHeight","fields","Attachments","length","Img","variant","src","url","Body","Title","Text","Type_name","map","type","Badge","Component","UseQueryParamExample","useQueryParam","filterName","ArrayParam","params","setFilterValue","paramsArray","className","blockTitle","filterItems","filter","val","labelBy","checked","includes","value","onChange","splice","indexOf","push","FilterBlock","filters","types","tags","HomeView","state","archiveItems","loading","fetchData","prevProps","JSON","stringify","self","setState","base","Airtable","apiKey","process","formulas","Object","keys","forEach","paramKey","filterVal","Array","isArray","v","join","formula","select","view","filterByFormula","firstPage","err","records","console","error","Container","Row","xs","md","lg","Col","ResourceView","resource","find","resourceId","record","alt","key","resourceMedia","resourceInfo","App","pandemics","languages","countries","data","ReactRouterRoute","Route","logo","exact","path","render","match","urlParams","qs","parse","location","search","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fad8dc8.chunk.js","sourcesContent":["import {Component} from 'react'\nimport {Card, Badge} from 'react-bootstrap'\nimport {NavLink} from \"react-router-dom\"\n\nexport default class ResourceCard extends Component {\n  render() {\n    return <NavLink to={\"/resource/\" + this.props.item.id}>\n            <Card style={{ marginBottom: '10px', minHeight: '280px'}}>\n              {(this.props.item.fields.Attachments && this.props.item.fields.Attachments.length > 0)\n                && <Card.Img variant=\"top\" src={this.props.item.fields.Attachments[0].url} />}\n              <Card.Body>\n                <Card.Title>{this.props.item.fields['Title ID']}</Card.Title>\n                <Card.Text>\n                </Card.Text>\n                {this.props.item.fields.Type_name && this.props.item.fields.Type_name.map(type => (\n                    <Badge variant=\"info\">{type}</Badge>\n                ))}\n              \n              </Card.Body>\n            </Card>\n          </NavLink>\n  }\n}","import * as React from 'react';\nimport { useQueryParam, ArrayParam } from 'use-query-params';\n\nconst UseQueryParamExample = (props) => {\n  const [params, setFilterValue] = useQueryParam(props.filterName, ArrayParam);\n\n  const paramsArray = params || []\n\n  const onChange = (value) => {\n    if(paramsArray.includes(value)){\n      paramsArray.splice(paramsArray.indexOf(value), 1)\n    } else {\n      paramsArray.push(value)\n    }\n    setFilterValue(paramsArray)\n  }\n  return (\n    <div>\n      <div className=\"filter-title\">{props.blockTitle}</div>\n      <ul>\n        {props.filterItems.map(filter =>{\n          const val = filter.fields[props.labelBy]\n           return <li>\n             <label>\n              <input type=\"checkbox\"\n                checked={paramsArray.includes(val)} \n                value={val} \n                onChange={() => onChange(val)}\n                ></input>\n                {val} ({filter.fields['Count']})\n             </label>\n             \n           </li>\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default UseQueryParamExample;","import {Component} from 'react'\nimport './FilterSidebar.sass';\n\nimport FilterBlock from './FilterBlock'\n\nexport default class ResourceCard extends Component {\n\n  render() {\n    return <div className=\"sidebar-container\">\n        <div className=\"filter-type\">\n            <FilterBlock blockTitle=\"Resource Type\" filterName=\"Type\" labelBy=\"Type\" filterItems={this.props.filters.types}></FilterBlock>\n        </div>\n        <div className=\"filter-type\">\n            <FilterBlock blockTitle=\"Tags\" filterName=\"Tags\" labelBy=\"Tag\" filterItems={this.props.filters.tags}></FilterBlock>\n        </div>\n      </div>\n  }\n}","import {Component} from 'react'\nimport './HomeView.sass';\nimport {Container, Row, Col} from 'react-bootstrap'\nimport ResourceCard from '../components/ResourceCard'\nimport FilterSidebar from '../components/FilterSidebar'\nimport Airtable from 'airtable'\n\nexport default class HomeView extends Component {\n  state = {\n\t\tarchiveItems: [],\n    loading: false\n\t}\n  componentDidMount() {\n    this.fetchData()\n  }\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.params) !== JSON.stringify(this.props.params)) {\n      this.fetchData()\n    }\n  }\n  fetchData () {\n    var self = this\n    self.setState({\n      loading: true\n    });\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n\n    let formulas = []\n\n    this.props.params && Object.keys(this.props.params).forEach(paramKey => {\n      let filterVal = Array.isArray(this.props.params[paramKey]) ? this.props.params[paramKey] : [this.props.params[paramKey]]\n      formulas.push('OR(' + filterVal.map(v => '{' + paramKey + '}=\"'+v+'\"').join(', ') +')')\n    })\n    let formula = formulas.length > 0 ? 'AND(' + formulas.join(', ') +')' : ''\n\n    //OR(RECORD_ID() = ‘recRjdJSziwMjfhO8’, RECORD_ID() = ‘recdRonUzKAIMPOxb’)\n    base('Data Sample').select({\n        view: 'Grid view',\n        filterByFormula: formula\n    }).firstPage(function(err, records) {\n        if (err) { console.error(err); return; }\n        self.setState({\n\t\t\t\t\tarchiveItems: records,\n          loading: false\n\t\t\t\t});\n    })\n  }\n  render() {\n    return <div className=\"home-view\">\n            <div className=\"sidebar\">\n              <FilterSidebar filters={this.props.filters}></FilterSidebar>\n            </div>\n            <div className=\"main-content\">\n              {this.state.loading ? \n                <div>Loading</div>\n                  :\n                <Container>\n                  <Row xs={2} md={3} lg={4}>\n                    {this.state.archiveItems.map((item) => (\n                      <Col key={item.id}>\n                        <ResourceCard item={item}></ResourceCard>\n                      </Col>\n                    ))}\n                  </Row>\n                </Container>\n            }\n            </div>\n          </div>\n  }\n}","import {Component} from 'react'\nimport './ResourceView.sass';\nimport Airtable from 'airtable'\n\nexport default class ResourceView extends Component {\n  state = {\n    resource: {}\n  }\n  componentDidMount() {\n    var self = this\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n    base('Data Sample').find(this.props.resourceId, function(err, record) {\n      if (err) { console.error(err); return; }\n      self.setState({\n        resource: record\n      })\n    })\n  }\n  resourceMedia() {\n    return <img src={this.state.resource.fields['Attachments'][0].url} alt={this.state.resource.fields['Title ID']}></img>\n  }\n  resourceInfo() {\n    return <div className=\"resource-sideinfo\">\n              <div className=\"resource-title\">\n                {this.state.resource.fields['Title ID']}\n                <div className=\"bookmark\"></div>\n              </div>\n              <div className=\"resource-desc\">\n                {this.state.resource.fields['Summary (limit 500)']}\n              </div>\n              <div className=\"resource-metadata\">\n                {['Pandemics', 'Type_name', 'Themes_name', 'Tags', 'Country', 'City', 'Language', 'Credits', 'Created', 'Published', 'Archived', 'Contributor'].map(key => {\n                  return <div className=\"meta-row\" key={key}>\n                    <div className=\"meta-title\">{key}</div>\n                    <div className=\"meta-value\">{Array.isArray(this.state.resource.fields[key]) ? this.state.resource.fields[key].join(', ') : this.state.resource.fields[key]}</div>\n                  </div>\n                  }\n                )}\n              </div>\n\n          </div>\n  }\n\n  render() {\n    return this.state.resource.fields ? \n      (<div className=\"resource-view\">\n        <div className=\"resource-preview\">\n          {this.resourceMedia()}\n        </div>\n        <div className=\"resource-sideinfo-container\">\n          {this.resourceInfo()}\n        </div>\n      </div>)\n    :\n    (<div>Loading</div>)\n  }\n}","export default __webpack_public_path__ + \"static/media/logo.65b2bc4b.svg\";","import './App.sass';\nimport {Component} from 'react'\nimport HomeView from './views/HomeView'\nimport ResourceView from './views/ResourceView'\nimport qs from 'qs'\n\nimport Airtable from 'airtable'\nimport logo from './assets/logo.svg';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n\tLink\n} from \"react-router-dom\";\n\nimport { QueryParamProvider } from 'use-query-params';\n\nclass App extends Component {\n\tstate = {\n\t\ttypes: [],\n    pandemics: [],\n    languages: [],\n    tags: [],\n    countries: []\n\t}\n  componentDidMount() {\n    var self = this\n\t\tvar base = new Airtable({\n\t\t\tapiKey:process.env.REACT_APP_AIRTABLE_API_KEY\n\t\t}).base('appyRkLfkVtG84rMU');\n\n    base('Type list').select({\n        view: 'Grid view',\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n\t\t\t\t\ttypes: data\n\t\t\t\t});\n    });\n    base('Pandemic list').select({\n        view: 'Grid view',\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          pandemics: data\n        });\n    });\n    base('Language list').select({\n      view: 'Grid view',\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          languages: data\n        });\n    });\n    base('Tag list').select({\n      view: 'Grid view',\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          tags: data\n        });\n    });\n    base('Countries List').select({\n      view: 'Grid view',\n    }).firstPage(function(err, data) {\n        if (err) { console.error(err); return; }\n        self.setState({\n          countries: data\n        });\n    });\n  }\n  render() {\n    return (\n\t\t\t<Router>\n        <QueryParamProvider ReactRouterRoute={Route}>\n          <div className=\"App\">\n            <div className=\"header\">\n              <Link to=\"/\"><img src={logo} alt=\"logo\"/></Link>\n            </div>\n            <div className=\"app-content\">\n              <Switch>\n                <Route exact path=\"/resource/:resourceId\" render={(props)=>{\n                  return <ResourceView resourceId={props.match.params.resourceId}/>\n                }} />\n                <Route path=\"/\" render={(props) => {\n                    let urlParams = qs.parse(props.location.search.slice(1))\n                    return  <HomeView archiveItems={this.state.archiveItems} filters={this.state} params={urlParams}></HomeView>\n                  }}/>\n              </Switch>\n            </div>\n          </div>\n        </QueryParamProvider>\n\t\t\t</Router>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}